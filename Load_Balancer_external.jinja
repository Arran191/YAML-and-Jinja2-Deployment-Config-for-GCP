#ref https://codeblog.dotsandbrackets.com/external-load-balancer/
# ref: https://cloud.google.com/load-balancing/docs/https/setting-up-https#gcloud
# ref: https://cloud.google.com/load-balancing/docs/ssl-certificates/self-managed-certs



# Not entirely sure why but the load-balancer takes about 5 miniutes before the load balancer works. I think this is a delay on google side.  Also when visting the load balancer details, 
# healthy does not occur until the IP is visted.
resources:
    - name: load-balancer-static-ip
      type: compute.v1.globalAddress
      properties: 
        ipVersion: IPV4
        addressType: EXTERNAL
      # Create a health check. This checks the instance to see if they are 'healthy'. If the load balancer is determined as not healthy it will not send traffic to it.

    - name: http-health-check
      type: compute.v1.httpHealthCheck
      properties:
        # How often the health check is performed. Set to 10 seconds.
        checkIntervalSec: 10 
        healthyThreshold: 2



    - name: http-backend-service
      type: compute.v1.backendService
      properties:
        backends:
        - group: {{ properties["instanceGroup"] }}
        - group: {{ properties["instanceGroup2"] }}
          balancingMode: UTILIZATION 
          max-utilization: 0.75
        healthChecks:
        - $(ref.http-health-check.selfLink)
        loadBalancingScheme: EXTERNAL
        portName: http
        protocol: HTTP

# Now we need a URL map. These direct requests to specific backend services based on the host and path of the requested URL.
    - name: http-url-map
      type: compute.v1.urlMap
      properties:
        defaultService: $(ref.http-backend-service.selfLink)

    - name: ssl-cert-http-load-balancer
      type: compute.v1.sslCertificate
      properties:
        # Cert generated by creating a private key, then a CSR in the GCP console. 
        certificate: |
            -----BEGIN CERTIFICATE-----
            # Cert made here. 
            -----END CERTIFICATE-----
        privateKey: |
            -----BEGIN RSA PRIVATE KEY-----
              # Cert made here. 
            -----END RSA PRIVATE KEY-----

    - name: http-proxy
      type: compute.v1.targetHttpProxy
      properties:
        sslCertificates:
         - $(ref.ssl-cert-http-load-balancer.selfLink)
        urlMap: $(ref.http-url-map.selfLink)


    - name: http-forwarding-rule
      type: compute.v1.globalForwardingRule
      properties:
        IPAddress: $(ref.load-balancer-static-ip.selfLink)
        IPProtocol: TCP
        loadBalancingScheme: EXTERNAL
        portRange: 80
        target: $(ref.http-proxy.selfLink)
